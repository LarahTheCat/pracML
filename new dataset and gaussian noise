import numpy as np
import pandas as pd

# Step 1: Create synthetic dataset
np.random.seed(42)  # For reproducibility
n_samples = 100

# Features: Random numbers between 0 and 100
X = np.random.rand(n_samples, 2) * 100

# Target: Linear combination + small random noise
y = 3 * X[:, 0] + 2 * X[:, 1] + np.random.randn(n_samples) * 5

# Combine into a DataFrame
df_original = pd.DataFrame(np.column_stack((X, y)), columns=['Feature1', 'Feature2', 'Target'])

# Step 2: Function to add Gaussian noise
def add_gaussian_noise(data, mean=0, std_dev=5):
    noise = np.random.normal(mean, std_dev, data.shape)
    return data + noise

# Step 3: Apply Gaussian noise
X_noisy = add_gaussian_noise(X, mean=0, std_dev=5)
y_noisy = add_gaussian_noise(y.reshape(-1, 1), mean=0, std_dev=5).flatten()

# Create noisy dataset
df_noisy = pd.DataFrame(np.column_stack((X_noisy, y_noisy)), columns=['Feature1', 'Feature2', 'Target'])

# Step 4: Display first 5 rows of both datasets
print("Original Dataset:")
print(df_original.head())
print("\nNoisy Dataset:")
print(df_noisy.head())
